# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

- task: UseNode@1
  inputs:
    checkLatest: true
- task: CmdLine@2
  inputs:
    script: 'npm i -g tfx-cli'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Install-Module -Name VstsTaskSdk -Force -RequiredVersion 0.11.0
# - task: PowerShell@2
#   inputs:
#     targetType: 'inline'
#     script: |
#       Get-Module -ListAvailable
- task: CopyFiles@2
  inputs:
    sourceFolder: '/home/vsts/.local/share/powershell/Modules/VstsTaskSdk/0.11.0'
    targetFolder: '/home/vsts/work/1/s/nsis/ps_modules/VstsTaskSdk'
- task: CmdLine@2
  inputs:
    script: 'tfx extension create --manifest-globs vss-extension.json'
    workingDirectory: '/home/vsts/work/1/s'
- task: FtpUpload@2
  inputs:
    credentialsOption: 'serviceEndpoint'
    serverEndpoint: 'Onestore Ftp Bizeta'
    rootDirectory: '/home/vsts/work/1/s'
    filePatterns: '*.vsix'
    remoteDirectory: '/internal/dev-ops-extensions/nsis-extension/$(Build.BuildId)/'
    clean: false
    cleanContents: false
    preservePaths: false
    trustSSL: false
